     // prompts the user to select the folder to be processed, stores the folder as the destination for saving
	 dir = getDirectory("Choose a Directory ");      
	 
	 // gives ImageJ a list of all files in the folder to work through
     list = getFileList(dir);   

	 // Clears the log file	
     print("\\Clear");
	 
	 //prints the number of files in the folder
	 print(list.length);   

    //setBatchMode(true);               
    for (f=0; f<list.length; f++) 
	{	
	    // main files loop (process every image until you get to the bottom of the list), { means open a loop
        path = dir+list[f];                       
        print(path);                              
        showProgress(f, list.length);     
 	    if (endsWith(list[f]," - C=0.tif")) 
		   {		
		    open(path);
		    print("Just opened the C0 file: " + path);
			start = getTime();           
			//optional get start time to see how long a process will take.  Goes with last line print time
			t=getTitle();                                       
			csOrigFileName = replace(t," - C=0.tif","");   
			
				
			// *********** STEP1 - Counting Pre-synaptic terminals
			selectWindow(csOrigFileName + " - C=0.tif");
			////waitForUser("So far .. opend - " + csOrigFileName + " - C=0.tif and duplicated");
			run("Z Project...", "start=1 stop=3 projection=[Max Intensity]");
			print("Successfuly ran Z-project");
			//run("Duplicate...", "title= [Auto Contrast Enhanced C0]");
			//run("Brightness/Contrast...");
			//run("Enhance Contrast", "saturated=0.35");
			//setOption("BlackBackground", true);

			
			run("Subtract Background...", "rolling=.5 sliding");
			print("Successfuly ran Subtract Background...rolling=.5 sliding");
			
			run("Gaussian Blur...", "sigma=0.75");
			print("Successfully ran Gaussian Blur...sigma=0.75 ");
			
			run("Threshold...");
			setAutoThreshold("Otsu dark");
			print("Successfully ran Otsu dark");
			
			waitForUser("check the threshold, then press OK");
			run("Analyze Particles...", "size=2-Infinity pixel circularity=0.50-1.00 show=Masks summarize");
			print("Successfully ran Analyze Particles...size=2-Infinity pixel circularity=0.50-1.00 show=Masks summarize");
			//waitForUser("Counted Pre-synaptic terminals");
			
			rename("mask blu c0");
			print("********** Created mask blu c0 *******");
			
			// ************** STEP2 - Counting Post synaptic terminals
			print(" ");
			print("Analysing post-synaptic counts: " + csOrigFileName + " - C=3.tif");
			open(replace(t," - C=0.tif"," - C=3.tif"));
			selectWindow(csOrigFileName + " - C=3.tif");
			run("Z Project...", "start=1 stop=3 projection=[Max Intensity]");
			print("Successfuly ran Z-project");
			//run("Duplicate...", "title= [Auto Contrast Enhanced C3]");
			//run("Brightness/Contrast...");
			//run("Enhance Contrast", "saturated=0.35");
	        //setOption("BlackBackground", true);
			run("Subtract Background...", "rolling=0.5 sliding");
			print("Successfuly ran Subtract Background...rolling=.5 sliding");
						
			run("Gaussian Blur...", "sigma=0.75");
			print("Successfully ran Gaussian Blur...sigma=0.75 "); 
			
			run("Threshold...");
			setAutoThreshold("Otsu dark");
			print("Successfully ran Otsu dark");
			waitForUser("check the threshold, then press OK");
			
			run("Analyze Particles...", "size=2-Infinity pixel circularity=0.50-1.00 show=Masks summarize");
			print("Successfully ran Analyze Particles...size=2-Infinity pixel circularity=0.50-1.00 show=Masks summarize");
			//waitForUser("Counted Post-synaptic terminals");
			
			//run("Create Mask");
			run("Convert to Mask");
			print("Sucessfully created mask c3 red");
			rename("mask c3 red");
			
			run("Invert");
			print("Successfully ran Invert");
			
			run("Options...", "iterations=1 count=1 black edm=32-bit do=Nothing");
			run("Distance Map");
			print("Successfully ran distance maps");
			
			run("Properties...", "channels=1 slices=1 frames=1 unit=um pixel_width=.051 pixel_height=.051 voxel_depth=.051 frame=[0 sec] origin=0,0");
			run("Threshold...");
			setAutoThreshold("Otsu dark");
			setThreshold(0.000000000, 0.500000000);
			
					
			run("Create Mask");
			rename("mask0-500nm");
			imageCalculator("AND create", "mask blu c0","mask0-500nm");
			selectWindow("Result of mask blu c0");
			rename("all synapses");
			print(" **************** Successfully created all synapses *************** ");
			run("Invert");
			run("Analyze Particles...", "size=0-Infinity pixel circularity=0-1.00 show=Masks summarize");
			print("Successfully ran Analyze Particles...size=2-Infinity pixel circularity=0.50-1.00 show=Masks summarize");
			waitForUser("Counted all synapses");
			

			// ************** STEP3 - Counting Dendritic lengths
			print(" ");
			print("Analysing dendrites :  counts" + csOrigFileName + " - C=1.tif");
			open(replace(t," - C=0.tif"," - C=1.tif"));
			selectWindow(csOrigFileName + " - C=1.tif");
			run("Z Project...", "start=1 stop=3 projection=[Max Intensity]");
			print("Successfuly ran Z-project");
			//run("Duplicate...", "title= [Auto Contrast Enhanced C1]");
			//run("Brightness/Contrast...");
			//run("Enhance Contrast", "saturated=0.35");
	        //setOption("BlackBackground", true);
			run("Gaussian Blur...", "sigma=1");
			run("Subtract Background...", "rolling=3 sliding");
			run("Threshold...");
			setAutoThreshold("Li dark");
			waitForUser("check the threshold, then press OK");
			
			run("Create Mask");
			run("Duplicate...", "title=[fat map2]");
			setOption("BlackBackground", true);
			run("Dilate");
			print("Dilate - SUCCESS !");
			
			imageCalculator("AND create", "all synapses","fat map2");
	                       print("ImageCalculator - SUCCESS !");
			
			selectWindow("all synapses");
			rename("All synapses on dendrites");
			run("Analyze Particles...", "size=2-Infinity pixel circularity=0.50-1.00 show=Nothing summarize");
			waitForUser("Counted synapsed on dendrites");
			
			
			selectWindow("fat map2");
			selectWindow("mask");
			run("Skeletonize");
			setAutoThreshold("Li dark");
			run("Measure");
			print("Measure - SUCCESS !");
		    //***************************  
			
			//waitForUser("Close all windows?");
			while (nImages>0) 
			{ 
				 selectImage(nImages); 
				  close(); 
			}
  
			}  //end of if C=0.tif   
 
	} // end of for loop
                                                 
	//setBatchMode("exit and display");
	showStatus("finished");
	print((getTime()-start)/1000);      // optional, goes with getTime.  Prints the amount of time taken for processing to the log file

	
	
